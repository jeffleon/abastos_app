name: Deploy master
on:
  push:
    branches:
    - main
env:
  PORT: 3000
  HOSTNAME: http://localhost
  APIROOT: /api/v1
  DB_USER: root
  DB_PASSWD: abastosadmin
  DB_NAME: abastos
  DB_PORT: 5432  
  DB_TYPE: postgres
  TOKEN_SECRET: AB@STOS_@PP
  SALT_ROUNDS: 8
  EXPIRE_TOKEN: 8h
  MAGIC_WORD: Bearer
  HEADER_JWT: authorization
  DB_HOST: rds-abastos.chk9upbsd9cx.us-east-1.rds.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: create .env file
      run: |
        touch .env
        echo PORT=${PORT} > .env
        echo HOSTNAME=${HOSTNAME} > .env
        echo APIROOT=${APIROOT} > .env
        echo DB_USER=${DB_USER} > .env
        echo DB_PASSWD=${DB_PASSWD} > .env
        echo DB_NAME=${DB_NAME} > .env
        echo DB_PORT=${DB_PORT} > .env
        echo DB_TYPE=${DB_TYPE} > .env
        echo TOKEN_SECRET=${TOKEN_SECRET} > .env
        echo SALT_ROUNDS=${SALT_ROUNDS} > .env
        echo EXPIRE_TOKEN=${EXPIRE_TOKEN} > .env
        echo MAGIC_WORD=${MAGIC_WORD} > .env
        echo HEADER_JWT=${HEADER_JWT} > .env
        echo DB_HOST=${DB_HOST} > .env
        cat .env
    - name: npm install
      run: |
        npm ci
        npm install
    - name: generate dist
      run: npm run build --if-present
    - name: Generate deployment package
      run: zip -r deploy_package.zip . -x '*.git*' -x node_modules/\* -x src/\*
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "us-east-1"
    - name: Upload package to S3 bucket
      run: aws s3 cp deploy_package.zip s3://elasticbeanstalk-us-east-1-559723227709/
    - name: Create new ElasticBeanstalk Application Version
      run: |
        aws elasticbeanstalk create-application-version \
        --application-name abastosappp \
        --source-bundle S3Bucket="elasticbeanstalk-us-east-1-559723227709",S3Key="deploy_package.zip" \
        --version-label "ver-${{ github.sha }}" \
        --description "commit-sha-${{ github.sha }}"
    - name: Deploy new ElasticBeanstalk Application Version
      run: aws elasticbeanstalk update-environment --environment-name Abastosappp-env --version-label "ver-${{ github.sha }}"
    - name: Deployed!
      run: echo App deployed to ELB